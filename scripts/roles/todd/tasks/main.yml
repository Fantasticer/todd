---
- name: Set PATH and GOPATH and for Vagrant user and shell profiles
  lineinfile:
    dest: "{{ item.file }}"
    state: "present"
    regexp: "^export {{ item.varname }}"
    line: "{{ item.varval }}"
  with_items:
    - { file: "/home/vagrant/.profile", varname: "GOPATH", varval: "export GOPATH={{ gopath }}" }
    - { file: "/home/vagrant/.profile", varname: "PATH", varval: "export PATH={{ path }}" }
    - { file: "/home/vagrant/.bashrc", varname: "GOPATH", varval: "export GOPATH={{ gopath }}" }
    - { file: "/home/vagrant/.bashrc", varname: "PATH", varval: "export PATH={{ path }}" }

- name: Set up docker repo
  apt_repository:
    repo: '{{ docker_repo }}'
    state: "present"

- name: Install APT dependencies
  apt:
    name: "{{ item }}"
    state: "latest"
    update_cache: yes
    force: yes  # Currently forcing because of a certificate error for docker-engine
  with_items:
    - 'git'
    - 'docker-engine'

- name: Add vagrant user to docker group
  user:
    name: "vagrant"
    groups: "docker"
    append: yes
  register: vagrant_user_added_to_docker_group

- name: Ensure docker service is restarted
  service:
    name: "docker"
    state: "restarted"
  when: vagrant_user_added_to_docker_group.changed

- name: Download Go tarball
  get_url:
    url: "{{ gourl }}/{{ gotarball }}"
    checksum: "sha256:{{ gosha256 }}"
    validate_certs: no
    dest: "/tmp/{{ gotarball }}"
    mode: 0770

- name: Unzip Go tarball
  unarchive:
    src: "/tmp/{{ gotarball }}"
    dest: "/usr/local/"
    copy: no
  args:
    creates: "/usr/local/go/bin/go"

- name: Config Files
  file:
    src: "{{ todd_dir }}/etc"
    dest: "/etc/todd"
    state: "link"

- name: Determining if ToDD is already compiled
  stat:
    path: "{{ todd_make_configureenv_check_file }}"
  register: "make_configureenv_check"

- name: Compile ToDD
  shell: "make && make install"
  args:
    chdir: "{{ todd_dir }}"
  register: "make_configureenv"
  when: not make_configureenv_check.stat.exists

- name: Provide message if already compiled
  debug:
    msg: |
      This Ansible playbook is only designed to compile ToDD once, at initial virtual machine creation.
      If you wish to test changes to ToDD, please follow documentation for compiling from source manually.
  when: make_configureenv_check.stat.exists

- name: Marking ToDD Compilation as complete
  file:
    path: "{{ todd_make_configureenv_check_file }}"
    state: "touch"
  when: make_configureenv.changed

- name: GOPATH Owner  #Needs to be changed to ensure idempotency
#      file:
#        path: "/home/vagrant/go"
#        owner: "vagrant"
#        group: "vagrant"
#        recurse: yes
#        state: "directory"
  shell: chown vagrant:vagrant $(find /home/vagrant/go | grep -v todd) warn=no

- name: Configure profile to "cd" to todd_dir when logging in
  lineinfile:
    dest: "/home/vagrant/.profile"
    state: "present"
    regexp: "^cd "
    line: "cd {{ todd_dir }}"

- name: Checking Status of Compile ToDD
  stat:
    path: "{{ todd_compile_check_file }}"
  register: "todd_compile_complete"

- name: Compile ToDD
  shell: ". /home/vagrant/.profile && make"
  args:
    chdir: "{{ todd_dir }}"
  register: "todd_compiled"
  when: not todd_compile_complete.stat.exists

- name: Marking Status of Compile ToDD as Complete
  file:
    path: "{{ todd_compile_check_file }}"
    state: touch
  when: todd_compiled.changed
